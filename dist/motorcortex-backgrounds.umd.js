!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i(require("@donkeyclip/motorcortex")):"function"==typeof define&&define.amd?define(["@donkeyclip/motorcortex"],i):(t="undefined"!=typeof globalThis?globalThis:t||self)["@donkeyclip/motorcortex-backgrounds"]=i(t.MotorCortex)}(this,(function(t){"use strict";class i extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return'\n      <div class="wrapper">\n        <div class="bg-wrapper bg-wrapper-0">\n          <div class="bg bg-0"></div>\n        </div>\n        <div class="bg-wrapper bg-wrapper-1">\n          <div class="bg bg-1"></div>\n        </div>\n  \t  </div>\n    '}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        flex-direction: column;\n      }\n      .bg-wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        position: relative;\n        overflow: hidden;\n      }\n      .bg{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        background:url(${this.attrs.bgUrl}) no-repeat;\n        background-size: contain;\n        position: relative;\n      }\n    `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{top:"0px"},initialValues:{top:`-${this.attrs.height/2}px`}},{duration:300,selector:".bg-0",easing:this.attrs.easing});this.addIncident(i,0);const n=new t.CSSEffect({animatedAttrs:{top:`-${this.attrs.height/2}px`},initialValues:{top:`-${this.attrs.height/2}px`}},{duration:300,selector:".bg-1",easing:this.attrs.easing});this.addIncident(n,0);const s=new t.CSSEffect({animatedAttrs:{height:this.attrs.height/2+"px",top:"0px"},initialValues:{height:"0px",top:this.attrs.height/2+"px"}},{duration:300,selector:".bg-wrapper",easing:this.attrs.easing});this.addIncident(s,0);const e=new t.CSSEffect({animatedAttrs:{top:`-${this.attrs.height/2}px`},initialValues:{top:"0px"}},{duration:300,selector:".bg-wrapper-0",easing:this.attrs.easing});this.addIncident(e,this.attrs.exitStart);const a=new t.CSSEffect({animatedAttrs:{top:this.attrs.height/2+"px"},initialValues:{top:"0px"}},{duration:300,selector:".bg-wrapper-1",easing:this.attrs.easing});this.addIncident(a,this.attrs.exitStart);const r=new t.CSSEffect({animatedAttrs:{top:this.attrs.height/2+"px"}},{duration:300,selector:".bg-0",easing:this.attrs.easing});this.addIncident(r,this.attrs.exitStart);const p=new t.CSSEffect({animatedAttrs:{top:`-${this.attrs.height}px`},initialValues:{top:`-${this.attrs.height/2}px`}},{duration:300,selector:".bg-1",easing:this.attrs.easing});this.addIncident(p,this.attrs.exitStart)}}class n extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return'\n      <div class="wrapper">\n        <div class="bg-wrapper bg-wrapper-0">\n          <div class="bg bg-0"></div>\n        </div>\n        <div class="bg-wrapper bg-wrapper-1">\n          <div class="bg bg-1"></div>\n        </div>\n  \t  </div>\n    '}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        overflow: hidden;\n      }\n      .bg-wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        position: absolute;\n        overflow: hidden;\n      }\n      .bg-wrapper-0{\n        right: ${this.attrs.width/2}px;\n      }\n      .bg-wrapper-1{\n        left: ${this.attrs.width/2}px;\n      }\n      .bg{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        background:url(${this.attrs.bgUrl}) no-repeat;\n        background-size: contain;\n        position: relative;\n      }\n    `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{left:this.attrs.width/2+"px"},initialValues:{left:`${this.attrs.width}px`}},{duration:1e3,selector:".bg-0",easing:this.attrs.easing});this.addIncident(i,0);const n=new t.CSSEffect({animatedAttrs:{right:this.attrs.width/2+"px"},initialValues:{right:`${this.attrs.width}px`}},{duration:1e3,selector:".bg-1",easing:this.attrs.easing});this.addIncident(n,0)}}class s extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return'\n      <div class="wrapper">\n        <div class="bg-wrapper">\n          <div class="bg bg-0"></div>\n        </div>\n        <div class="bg-wrapper">\n          <div class="bg bg-1"></div>\n        </div>\n        <div class="bg-wrapper">\n          <div class="bg bg-2"></div>\n        </div>\n        <div class="bg-wrapper">\n          <div class="bg bg-3"></div>\n        </div>\n  \t  </div>\n    '}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n      }\n      .bg-wrapper{\n        width: ${this.attrs.width/4}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        position: relative;\n        overflow: hidden;\n        top: -${this.attrs.height}px;\n      }\n      .bg{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        background:url(${this.attrs.bgUrl}) no-repeat;\n        background-size: cover;\n        position: absolute;\n      }\n      .bg-0{\n        left:0\n      }\n      .bg-1{\n        left:-${this.attrs.width-this.attrs.width/4*3}px;\n      }\n      .bg-2{\n        left:-${this.attrs.width-this.attrs.width/4*2}px;\n      }\n      .bg-3{\n        left:-${this.attrs.width-this.attrs.width/4}px;\n      }\n    `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{top:"0px"}},{duration:1e3,selector:".bg-wrapper",easing:this.attrs.easing,delay:"@expression(random(500))"});if(this.addIncident(i,0),!0===this.attrs.bgOut){const i=new t.CSSEffect({animatedAttrs:{top:`${this.attrs.height}px`}},{duration:1e3,selector:".bg-wrapper",easing:this.attrs.easing,delay:"@expression(random(500))"});this.addIncident(i,this.attrs.exitStart)}}}class e extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return'\n      <div class="wrapper">\n        <div class="bg-wrapper">\n          <div class="bg bg-0"></div>\n        </div>\n        <div class="bg-wrapper">\n          <div class="bg bg-1"></div>\n        </div>\n        <div class="bg-wrapper">\n          <div class="bg bg-2"></div>\n        </div>\n        <div class="bg-wrapper">\n          <div class="bg bg-3"></div>\n        </div>\n  \t  </div>\n    '}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        flex-direction: column;\n      }\n      .bg-wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height/4}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        position: relative;\n        overflow: hidden;\n        left:${this.attrs.width}px;\n      }\n      .bg{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        background:url(${this.attrs.bgUrl}) no-repeat;\n        background-size: cover;\n        position: relative;\n      }\n      .bg-0{\n        top:0\n      }\n      .bg-1{\n        top:-${this.attrs.height-this.attrs.height/4*3}px;\n      }\n      .bg-2{\n        top:-${this.attrs.height-this.attrs.height/4*2}px;\n      }\n      .bg-3{\n        top:-${this.attrs.height-this.attrs.height/4}px;\n      }\n    `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{left:"0px"}},{duration:1e3,selector:".bg-wrapper",easing:this.attrs.easing,delay:"@stagger(0, 500,0)"});if(this.addIncident(i,0),!0===this.attrs.bgOut){const i=new t.CSSEffect({animatedAttrs:{left:`-${this.attrs.width}px`}},{duration:1e3,selector:".bg-wrapper",easing:this.attrs.easing,delay:"@stagger(0, 500,0)"});this.addIncident(i,this.attrs.exitStart)}}}class a extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){const t=[],i=this.attrs.columns*this.attrs.rows;for(let n=0;n<i;n++)t.push(` <div  class="grid grid-${n}"> </div> `);return`\n    <div class="wrapper">\n      ${t.join("")}\n\t  </div>\n    `}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        font-family: 'Poppins', sans-serif;\n        display: grid;\n        grid-template-columns: repeat(${this.attrs.columns}, 1fr);\n        justify-items: center;\n      }\n      .grid{\n        background: ${this.attrs.color};\n        width: ${this.attrs.width/this.attrs.columns}px;\n        height: ${this.attrs.height/this.attrs.rows}px;\n      }\n  `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{opacity:0},initialValues:{opacity:.7}},{duration:1e3,selector:".grid",delay:"@expression(random(1000))"});this.addIncident(i,0)}}class r extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return'\n      <div class="wrapper">\n        <div class="bg-wrapper bg-wrapper-0">\n          <div class=" bg-wrapper-in">\n            <div class="bg bg-0"><div class="bg-in"></div></div>\n          </div>\n          <div class=" bg-wrapper-in">\n            <div class="bg bg-1"><div class="bg-in"></div></div>\n          </div>\n        </div>\n        <div class="bg-wrapper  bg-wrapper-1">\n          <div class="bg-wrapper-full-width bg-wrapper-in ">\n            <div class="bg bg-2"><div class="bg-in"></div></div>.\n          </div>\n        </div>\n  \t  </div>\n    '}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        flex-direction: column;\n      }\n      .bg-wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        position: relative;\n        overflow: hidden;\n      }\n\n      .bg-wrapper-0{\n        height: ${.65*this.attrs.height}px;\n      }\n      .bg-wrapper-1{\n        height: ${.35*this.attrs.height}px;\n      }\n      .bg-wrapper-in{\n        width: ${this.attrs.width/2}px;\n        height: ${.65*this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        position: relative;\n        overflow: hidden;\n      }\n      .bg-wrapper-full-width{\n        width: ${this.attrs.width}px;\n      }\n      .bg{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        background:url(${this.attrs.bgUrl}) no-repeat;\n        background-size: cover;\n        position: absolute;\n      }\n      .bg-0{\n        left:0\n      }\n      .bg-1{\n        left:-${this.attrs.width/2}px;\n      }\n      .bg-2{\n        top:-${.65*this.attrs.height}px;\n      }\n      .bg-in{\n        background:${this.attrs.overlayColor};\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n      }\n    `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{opacity:0},initialValues:{opacity:1}},{duration:1e3,selector:".bg-in",easing:"easeOutQuart",delay:"@stagger(200, 500,0)"});this.addIncident(i,0);const n=new t.CSSEffect({animatedAttrs:{opacity:1},initialValues:{opacity:0}},{duration:1e3,selector:".bg-wrapper-in",easing:"easeOutQuart",delay:"@stagger(0, 500,0)"});this.addIncident(n,100);const s=new t.CSSEffect({animatedAttrs:{left:"0px"},initialValues:{left:`-${this.attrs.width/2}px`}},{duration:1400,selector:".bg-0",easing:"easeOutQuart"});this.addIncident(s,0);const e=new t.CSSEffect({animatedAttrs:{top:"0px"},initialValues:{top:`-${.65*this.attrs.height}px`}},{duration:1e3,selector:".bg-1",easing:"easeOutQuart"});this.addIncident(e,400);const r=new t.CSSEffect({animatedAttrs:{left:"0px"},initialValues:{left:`-${this.attrs.width/2}px`}},{duration:1500,selector:".bg-2",easing:"easeOutQuart"});this.addIncident(r,400);const p=new t.CSSEffect({animatedAttrs:{transform:{scale:1}},initialValues:{transform:{scale:1.2}}},{duration:3600,selector:".bg"});if(this.addIncident(p,1e3),!0===this.attrs.grid){const t=new a({width:this.attrs.width,height:this.attrs.height,color:this.attrs.gridColor,columns:this.attrs.columns,rows:this.attrs.rows},{selector:".bg",duration:this.attrs.gridDuration||1972});this.addIncident(t,0)}}}return{npm_name:"@donkeyclip/motorcortex-backgrounds",version:"0.2.0",incidents:[{exportable:i,name:"BgOpener",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},bgUrl:{optional:!1,type:"string"},easing:{optional:!1,type:"string"},exitStart:{optional:!1,type:"number"}}},{exportable:n,name:"TwoSidesReveal",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},bgUrl:{optional:!1,type:"string"},easing:{optional:!1,type:"string"}}},{exportable:s,name:"ColumnReveal",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},bgUrl:{optional:!1,type:"string"},easing:{optional:!1,type:"string"},exitStart:{optional:!1,type:"number"},bgOut:{optional:!1,type:"boolean"}}},{exportable:e,name:"RowReveal",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},bgUrl:{optional:!1,type:"string"},easing:{optional:!1,type:"string"},exitStart:{optional:!1,type:"number"},bgOut:{optional:!1,type:"boolean"}}},{exportable:r,name:"ThreeSidesReveal",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},bgUrl:{optional:!1,type:"string"},overlayColor:{optional:!1,type:"color"},grid:{optional:!1,type:"boolean"},gridDuration:{optional:!0,type:"number"},gridColor:{optional:!1,type:"color"},columns:{optional:!1,type:"number"},rows:{optional:!1,type:"number"}}},{exportable:a,name:"Grid",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},color:{optional:!1,type:"color"},columns:{optional:!1,type:"number"},rows:{optional:!1,type:"number"}}}]}}));
