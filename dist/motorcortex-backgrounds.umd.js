!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i(require("@donkeyclip/motorcortex")):"function"==typeof define&&define.amd?define(["@donkeyclip/motorcortex"],i):(t="undefined"!=typeof globalThis?globalThis:t||self)["@donkeyclip/motorcortex-backgrounds"]=i(t.MotorCortex)}(this,(function(t){"use strict";class i extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return'\n      <div class="wrapper">\n        <div class="bg-wrapper bg-wrapper-0">\n          <div class="bg bg-0"></div>\n        </div>\n        <div class="bg-wrapper bg-wrapper-1">\n          <div class="bg bg-1"></div>\n        </div>\n  \t  </div>\n    '}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        flex-direction: column;\n      }\n      .bg-wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        position: relative;\n        overflow: hidden;\n      }\n      .bg{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        background:url(${this.attrs.bgUrl}) no-repeat;\n        background-size: contain;\n        position: relative;\n      }\n    `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{top:"0px"},initialValues:{top:`-${this.attrs.height/2}px`}},{duration:300,selector:".bg-0",easing:this.attrs.easing});this.addIncident(i,0);const n=new t.CSSEffect({animatedAttrs:{top:`-${this.attrs.height/2}px`},initialValues:{top:`-${this.attrs.height/2}px`}},{duration:300,selector:".bg-1",easing:this.attrs.easing});this.addIncident(n,0);const s=new t.CSSEffect({animatedAttrs:{height:this.attrs.height/2+"px",top:"0px"},initialValues:{height:"0px",top:this.attrs.height/2+"px"}},{duration:300,selector:".bg-wrapper",easing:this.attrs.easing});this.addIncident(s,0);const e=new t.CSSEffect({animatedAttrs:{top:`-${this.attrs.height/2}px`},initialValues:{top:"0px"}},{duration:300,selector:".bg-wrapper-0",easing:this.attrs.easing});this.addIncident(e,this.attrs.exitStart);const a=new t.CSSEffect({animatedAttrs:{top:this.attrs.height/2+"px"},initialValues:{top:"0px"}},{duration:300,selector:".bg-wrapper-1",easing:this.attrs.easing});this.addIncident(a,this.attrs.exitStart);const r=new t.CSSEffect({animatedAttrs:{top:this.attrs.height/2+"px"}},{duration:300,selector:".bg-0",easing:this.attrs.easing});this.addIncident(r,this.attrs.exitStart);const o=new t.CSSEffect({animatedAttrs:{top:`-${this.attrs.height}px`},initialValues:{top:`-${this.attrs.height/2}px`}},{duration:300,selector:".bg-1",easing:this.attrs.easing});this.addIncident(o,this.attrs.exitStart)}}class n extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return'\n      <div class="wrapper">\n        <div class="bg-wrapper bg-wrapper-0">\n          <div class="bg bg-0"></div>\n        </div>\n        <div class="bg-wrapper bg-wrapper-1">\n          <div class="bg bg-1"></div>\n        </div>\n  \t  </div>\n    '}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        overflow: hidden;\n      }\n      .bg-wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        position: absolute;\n        overflow: hidden;\n      }\n      .bg-wrapper-0{\n        right: ${this.attrs.width/2}px;\n      }\n      .bg-wrapper-1{\n        left: ${this.attrs.width/2}px;\n      }\n      .bg{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        background:url(${this.attrs.bgUrl}) no-repeat;\n        background-size: contain;\n        position: relative;\n      }\n    `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{left:this.attrs.width/2+"px"},initialValues:{left:`${this.attrs.width}px`}},{duration:1e3,selector:".bg-0",easing:this.attrs.easing});this.addIncident(i,0);const n=new t.CSSEffect({animatedAttrs:{right:this.attrs.width/2+"px"},initialValues:{right:`${this.attrs.width}px`}},{duration:1e3,selector:".bg-1",easing:this.attrs.easing});this.addIncident(n,0)}}class s extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return'\n      <div class="wrapper">\n        <div class="bg-wrapper">\n          <div class="bg bg-0"></div>\n        </div>\n        <div class="bg-wrapper">\n          <div class="bg bg-1"></div>\n        </div>\n        <div class="bg-wrapper">\n          <div class="bg bg-2"></div>\n        </div>\n        <div class="bg-wrapper">\n          <div class="bg bg-3"></div>\n        </div>\n  \t  </div>\n    '}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n      }\n      .bg-wrapper{\n        width: ${this.attrs.width/4}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        position: relative;\n        overflow: hidden;\n        top: -${this.attrs.height}px;\n      }\n      .bg{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        background:url(${this.attrs.bgUrl}) no-repeat;\n        background-size: cover;\n        position: absolute;\n      }\n      .bg-0{\n        left:0\n      }\n      .bg-1{\n        left:-${this.attrs.width-this.attrs.width/4*3}px;\n      }\n      .bg-2{\n        left:-${this.attrs.width-this.attrs.width/4*2}px;\n      }\n      .bg-3{\n        left:-${this.attrs.width-this.attrs.width/4}px;\n      }\n    `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{top:"0px"}},{duration:1e3,selector:".bg-wrapper",easing:this.attrs.easing,delay:"@expression(random(500))"});if(this.addIncident(i,0),!0===this.attrs.bgOut){const i=new t.CSSEffect({animatedAttrs:{top:`${this.attrs.height}px`}},{duration:1e3,selector:".bg-wrapper",easing:this.attrs.easing,delay:"@expression(random(500))"});this.addIncident(i,this.attrs.exitStart)}}}class e extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return'\n      <div class="wrapper">\n        <div class="bg-wrapper">\n          <div class="bg bg-0"></div>\n        </div>\n        <div class="bg-wrapper">\n          <div class="bg bg-1"></div>\n        </div>\n        <div class="bg-wrapper">\n          <div class="bg bg-2"></div>\n        </div>\n        <div class="bg-wrapper">\n          <div class="bg bg-3"></div>\n        </div>\n  \t  </div>\n    '}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        flex-direction: column;\n      }\n      .bg-wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height/4}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        position: relative;\n        overflow: hidden;\n        left:${this.attrs.width}px;\n      }\n      .bg{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        background:url(${this.attrs.bgUrl}) no-repeat;\n        background-size: cover;\n        position: relative;\n      }\n      .bg-0{\n        top:0\n      }\n      .bg-1{\n        top:-${this.attrs.height-this.attrs.height/4*3}px;\n      }\n      .bg-2{\n        top:-${this.attrs.height-this.attrs.height/4*2}px;\n      }\n      .bg-3{\n        top:-${this.attrs.height-this.attrs.height/4}px;\n      }\n    `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{left:"0px"}},{duration:1e3,selector:".bg-wrapper",easing:this.attrs.easing,delay:"@stagger(0, 500,0)"});if(this.addIncident(i,0),!0===this.attrs.bgOut){const i=new t.CSSEffect({animatedAttrs:{left:`-${this.attrs.width}px`}},{duration:1e3,selector:".bg-wrapper",easing:this.attrs.easing,delay:"@stagger(0, 500,0)"});this.addIncident(i,this.attrs.exitStart)}}}class a extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){const t=[],i=this.attrs.columns*this.attrs.rows;for(let n=0;n<i;n++)t.push(` <div  class="grid grid-${n}"> </div> `);return`\n    <div class="wrapper">\n      ${t.join("")}\n\t  </div>\n    `}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        font-family: 'Poppins', sans-serif;\n        display: grid;\n        grid-template-columns: repeat(${this.attrs.columns}, 1fr);\n        justify-items: center;\n      }\n      .grid{\n        background: ${this.attrs.color};\n        width: ${this.attrs.width/this.attrs.columns}px;\n        height: ${this.attrs.height/this.attrs.rows}px;\n      }\n  `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{opacity:0},initialValues:{opacity:.7}},{duration:1e3,selector:".grid",delay:"@expression(random(1000))"});this.addIncident(i,0)}}class r extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return'\n      <div class="wrapper">\n        <div class="bg-wrapper bg-wrapper-0">\n          <div class=" bg-wrapper-in">\n            <div class="bg bg-0"><div class="bg-in"></div></div>\n          </div>\n          <div class=" bg-wrapper-in">\n            <div class="bg bg-1"><div class="bg-in"></div></div>\n          </div>\n        </div>\n        <div class="bg-wrapper  bg-wrapper-1">\n          <div class="bg-wrapper-full-width bg-wrapper-in ">\n            <div class="bg bg-2"><div class="bg-in"></div></div>.\n          </div>\n        </div>\n  \t  </div>\n    '}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        flex-direction: column;\n      }\n      .bg-wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        position: relative;\n        overflow: hidden;\n      }\n\n      .bg-wrapper-0{\n        height: ${.65*this.attrs.height}px;\n      }\n      .bg-wrapper-1{\n        height: ${.35*this.attrs.height}px;\n      }\n      .bg-wrapper-in{\n        width: ${this.attrs.width/2}px;\n        height: ${.65*this.attrs.height}px;\n        display:flex;\n        font-family: 'Poppins', sans-serif;\n        position: relative;\n        overflow: hidden;\n      }\n      .bg-wrapper-full-width{\n        width: ${this.attrs.width}px;\n      }\n      .bg{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        background:url(${this.attrs.bgUrl}) no-repeat;\n        background-size: cover;\n        position: absolute;\n      }\n      .bg-0{\n        left:0\n      }\n      .bg-1{\n        left:-${this.attrs.width/2}px;\n      }\n      .bg-2{\n        top:-${.65*this.attrs.height}px;\n      }\n      .bg-in{\n        background:${this.attrs.overlayColor};\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n      }\n    `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{opacity:0},initialValues:{opacity:1}},{duration:1e3,selector:".bg-in",easing:"easeOutQuart",delay:"@stagger(200, 500,0)"});this.addIncident(i,0);const n=new t.CSSEffect({animatedAttrs:{opacity:1},initialValues:{opacity:0}},{duration:1e3,selector:".bg-wrapper-in",easing:"easeOutQuart",delay:"@stagger(0, 500,0)"});this.addIncident(n,100);const s=new t.CSSEffect({animatedAttrs:{left:"0px"},initialValues:{left:`-${this.attrs.width/2}px`}},{duration:1400,selector:".bg-0",easing:"easeOutQuart"});this.addIncident(s,0);const e=new t.CSSEffect({animatedAttrs:{top:"0px"},initialValues:{top:`-${.65*this.attrs.height}px`}},{duration:1e3,selector:".bg-1",easing:"easeOutQuart"});this.addIncident(e,400);const r=new t.CSSEffect({animatedAttrs:{left:"0px"},initialValues:{left:`-${this.attrs.width/2}px`}},{duration:1500,selector:".bg-2",easing:"easeOutQuart"});this.addIncident(r,400);const o=new t.CSSEffect({animatedAttrs:{transform:{scale:1}},initialValues:{transform:{scale:1.2}}},{duration:3600,selector:".bg"});if(this.addIncident(o,1e3),!0===this.attrs.grid){const t=new a({width:this.attrs.width,height:this.attrs.height,color:this.attrs.gridColor,columns:this.attrs.columns,rows:this.attrs.rows},{selector:".bg",duration:this.attrs.gridDuration||1972});this.addIncident(t,0)}}}class o extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return'\n      <div class="wrapper">\n        \n  \t  </div>\n    '}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        --s: ${this.attrs.size}px;\n        --p: calc(var(--s) / 2);\n        --c1: ${this.attrs.colors[0]};\n        --c2: ${this.attrs.colors[1]};\n        --c3: ${this.attrs.colors[2]};\n        --bg: var(--c3);\n        --d: 4000ms;\n        --e: cubic-bezier(0.76, 0, 0.24, 1);\n        \n        background-color: var(--bg);\n        background-image:\n          linear-gradient(45deg, var(--c1) 25%, transparent 25%),\n          linear-gradient(-45deg, var(--c1) 25%, transparent 25%),\n          linear-gradient(45deg, transparent 75%, var(--c2) 75%),\n          linear-gradient(-45deg, transparent 75%, var(--c2) 75%);\n        background-size: var(--s) var(--s);\n        background-position: \n          calc(var(--p) *  1) calc(var(--p) *  0), \n          calc(var(--p) * -1) calc(var(--p) *  1), \n          calc(var(--p) *  1) calc(var(--p) * -1), \n          calc(var(--p) * -1) calc(var(--p) *  0);\n        animation: \n          color var(--d) var(--e) infinite,\n          position var(--d) var(--e) infinite;\n      }\n      \n      // @keyframes color {\n      //   0%, 25% {\n      //     --bg: var(--c3);\n      //   }\n      //   26%, 50% {\n      //     --bg: var(--c1);\n      //   }\n      //   51%, 75% {\n      //     --bg: var(--c3);\n      //   }\n      //   76%, 100% {\n      //     --bg: var(--c2);\n      //   }\n      // }\n      \n      // @keyframes position {\n      //   0% {\n      //     background-position: \n      //       calc(var(--p) *  1) calc(var(--p) *  0), \n      //       calc(var(--p) * -1) calc(var(--p) *  1), \n      //       calc(var(--p) *  1) calc(var(--p) * -1), \n      //       calc(var(--p) * -1) calc(var(--p) *  0);\n      //   }\n      //   25% {\n      //     background-position: \n      //       calc(var(--p) *  1) calc(var(--p) *  4), \n      //       calc(var(--p) * -1) calc(var(--p) *  5), \n      //       calc(var(--p) *  1) calc(var(--p) *  3), \n      //       calc(var(--p) * -1) calc(var(--p) *  4);\n      //   }\n      //   50% {\n      //     background-position: \n      //       calc(var(--p) *  3) calc(var(--p) * 8), \n      //       calc(var(--p) * -3) calc(var(--p) * 9), \n      //       calc(var(--p) *  2) calc(var(--p) * 7), \n      //       calc(var(--p) * -2) calc(var(--p) * 8);\n      //   }\n      //   75% {\n      //     background-position: \n      //       calc(var(--p) *  3) calc(var(--p) * 12), \n      //       calc(var(--p) * -3) calc(var(--p) * 13), \n      //       calc(var(--p) *  2) calc(var(--p) * 11), \n      //       calc(var(--p) * -2) calc(var(--p) * 12);\n      //   }\n      //   100% {    \n      //     background-position: \n      //       calc(var(--p) *  5) calc(var(--p) * 16), \n      //       calc(var(--p) * -5) calc(var(--p) * 17), \n      //       calc(var(--p) *  5) calc(var(--p) * 15), \n      //       calc(var(--p) * -5) calc(var(--p) * 16);\n      //   }\n      // }\n      \n     \n      \n    `}buildTree(){const i=this.attrs.size/2,n=new t.Combo({incidents:[{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{backgroundColor:this.attrs.colors[2]}},props:{duration:800,easing:[.76,0,.24,1]},position:0},{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{backgroundColor:this.attrs.colors[0]}},props:{duration:800,easing:[.76,0,.24,1]},position:800},{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{backgroundColor:this.attrs.colors[2]}},props:{duration:800,easing:[.76,0,.24,1]},position:1600},{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{backgroundColor:this.attrs.colors[1]}},props:{duration:800,easing:[.76,0,.24,1]},position:2400},{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{backgroundColor:this.attrs.colors[2]}},props:{duration:800,easing:[.76,0,.24,1]},position:3200}]},{selector:".wrapper"}),s=new t.Combo({incidents:[{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{backgroundPosition:`\n                  ${i}px ${4*i}px, \n                   ${-1*i}px ${5*i}px, \n                  ${i}px ${3*i}px, \n                   ${-1*i}px  ${4*i}px`}},props:{duration:800,easing:[.76,0,.24,1]},position:0},{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{backgroundPosition:`\n                ${3*i}px ${8*i}px, \n                ${-3*i}px ${9*i}px, \n                ${2*i}px ${7*i}px, \n                ${-2*i}px ${8*i}px\n                `}},props:{duration:800,easing:[.76,0,.24,1]},position:1600},{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{backgroundPosition:`\n                ${3*i}px ${12*i}px, \n                ${-3*i}px ${13*i}px, \n                ${2*i}px ${11*i}px, \n                ${-2*i}px ${12*i}px\n                \n                `}},props:{duration:800,easing:[.76,0,.24,1]},position:2400},{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{backgroundPosition:`\n                ${5*i}px ${16*i}px, \n                ${-5*i}px ${17*i}px, \n                ${5*i}px ${15*i}px, \n                ${-5*i}px ${16*i}px\n                \n                `}},props:{duration:800,easing:[.76,0,.24,1]},position:3200}]},{selector:".wrapper"});this.addIncident(n,0),this.addIncident(s,0)}}function l(t,i){return Math.floor(Math.random()*(i-t)+t)}class p extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return this.bubbleCords=[...new Array(this.attrs.bubbleCount/2)].map((()=>[l(0,100),l(0,100),l(3,this.attrs.maxBubbleRadius)])),`\n      <div class="wrapper">\n        ${[...new Array(this.attrs.bubbleCount)].map(((t,i)=>i<this.attrs.bubbleCount/2?`<div class="bubble initial" style="width:${this.bubbleCords[i][2]}px; height:${this.bubbleCords[i][2]}px; left:${this.bubbleCords[i][0]}%; top:${this.bubbleCords[i][1]}%" > <div class="bubble-incide"></div></div>`:`<div class="bubble end" style="left:${this.bubbleCords[i-this.attrs.bubbleCount/2][0]}%; width:${this.bubbleCords[i-this.attrs.bubbleCount/2][2]}px; height:${this.bubbleCords[i-this.attrs.bubbleCount/2][2]}px;" ><div class="bubble-incide"></div></div>`)).join("")}\n  \t  </div>\n    `}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        overflow: hidden;\n        background-color:${this.attrs.backgroundColor}\n      }\n      .bubble{\n        position: absolute;\n        display: block;\n        border-radius: 50%;\n        top:100%\n      }\n      .bubble-incide{\n        position: absolute;\n        content: '';\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: ${this.attrs.color};\n        border-radius: inherit;\n      }\n      .bubble:nth-of-type(odd) >.bubble-incide{\n        left:100%\n      }\n      \n    `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{top:`@pattern(${this.bubbleCords.map((t=>`- ${t[2]} px`))})`}},{duration:4e3,selector:".initial"});this.addIncident(i,0);const n=new t.CSSEffect({animatedAttrs:{top:`@pattern(${this.bubbleCords.map((t=>t[1]+"%"))})`}},{duration:4e3,selector:".end"});this.addIncident(n,0);const s=new t.Combo({incidents:[{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{left:"100%"}},props:{duration:2e3,selector:".bubble-incide"},position:0},{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{left:"0%"}},props:{duration:2e3,selector:".bubble-incide"},position:2e3}]},{selector:".bubble:nth-of-type(even)"}),e=new t.Combo({incidents:[{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{left:"0%"}},props:{duration:2e3,selector:".bubble-incide"},position:0},{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{left:"100%"}},props:{duration:2e3,selector:".bubble-incide"},position:2e3}]},{selector:".bubble:nth-of-type(odd)"});this.addIncident(s,0),this.addIncident(e,0)}}class h extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return"\n      <div class=\"wrapper\">\n      <div class=\"box\">\n      <div class='wave -one'></div>\n      <div class='wave -two'></div>\n      <div class='wave -three'></div></div>\n        \n  \t  </div>\n    "}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        overflow: hidden;\n        background-color:${this.attrs.backgroundColor}\n      }\n      .box {\n        position: fixed;\n        top: -20%;\n        transform: rotate(80deg);\n        left: 17%;\n      }\n      .wave {\n        position: fixed;\n        top: 0;\n        left: 0;\n        opacity: .4;\n        position: absolute;\n        top: 3%;\n        left: 10%;\n        background: ${this.attrs.colors[0]};\n        width: ${this.attrs.width}px;\n        height: ${.9*this.attrs.width}px;\n        transform-origin: 50% 48%;\n        border-radius: 43%;\n        animation: drift 7000ms infinite linear;\n      }\n      \n      .wave.-three {\n        animation: drift 7500ms infinite linear;\n        position: fixed;\n        background-color: ${this.attrs.colors[1]};\n      }\n      \n      .wave.-two {\n        animation: drift 3000ms infinite linear;\n        background: ${this.attrs.colors[2]};\n        position: fixed;\n      }\n      \n    `}buildTree(){const i=new t.CSSEffect({animatedAttrs:{transform:{rotate:"360deg"}}},{duration:4e3,selector:".wave.-one"});this.addIncident(i,0);const n=new t.CSSEffect({animatedAttrs:{transform:{rotate:"390deg"}},initialValues:{transform:{rotate:"30deg"}}},{duration:4e3,selector:".wave.-two"});this.addIncident(n,0);const s=new t.CSSEffect({animatedAttrs:{transform:{rotate:"420deg"}},initialValues:{transform:{rotate:"60deg"}}},{duration:4e3,selector:".wave.-three"});this.addIncident(s,0)}}class d extends t.Effect{onGetContext(){if(!this)return;this.canvasContext=this.element.getContext("2d"),this.lines=[],this.w=this.canvasContext.canvas.width,this.h=this.canvasContext.canvas.height;this.angle=-29*Math.PI/180,this.conf={hue:this.attrs.hue||90,shadow:this.attrs.shadow||!1,width:this.attrs.width||1,length:this.attrs.length||1,emitNum:this.attrs.lineNumber||50,speed:1,opacity:this.attrs.opacity||.6},this.bgDots=[{rad:(this.w+this.h)/2,x:this.w/2,y:0,hue:0},{rad:(this.w+this.h)/2,x:0,y:this.h,hue:-45},{rad:(this.w+this.h)/2,x:this.w,y:this.h,hue:-90}],this.emitLine()}emitLine(){for(let t=0;t<this.conf.emitNum;t++){const t=Math.random()*this.w+100,i=Math.random()*this.h-100;this.lines.push({x1:t,y1:i,x2:t,y2:i,length:(180*Math.random()+80)*this.conf.length,width:(10*Math.random()+5)*this.conf.width,v1:(2*Math.random()+2)*this.conf.speed,v2:(.5*Math.random()+.5)*this.conf.speed,hue:50*Math.random(),test:Math.tan(this.angle)*(-length-t)+i})}}drawLines(t){this.canvasContext.globalCompositeOperation="lighter";for(let i=0;i<this.lines.length;i++)this.canvasContext.lineWidth=this.lines[i].width,this.canvasContext.beginPath(),t<.5?(this.lines[i].x1=this.lines[i].x2-this.lines[i].test*t*this.lines[i].v2,this.lines[i].y1=this.lines[i].y2+this.lines[i].test*t*this.lines[i].v2,this.canvasContext.moveTo(this.lines[i].x2,this.lines[i].y2),this.canvasContext.lineTo(this.lines[i].x1,this.lines[i].y1)):(this.canvasContext.moveTo(this.lines[i].x2-this.lines[i].test*(t-.5)*this.lines[i].v1,this.lines[i].y2+this.lines[i].test*(t-.5)*this.lines[i].v1),this.lines[i].x2-this.lines[i].test*(t-.5)*this.lines[i].v1>=this.lines[i].x1?this.canvasContext.lineTo(this.lines[i].x1,this.lines[i].y1):this.canvasContext.lineTo(void 0,void 0)),this.canvasContext.strokeStyle="hsla("+(this.conf.hue-this.lines[i].hue)+", 100%, 50%, "+this.conf.opacity+")",this.canvasContext.lineCap="round",this.canvasContext.stroke(),this.canvasContext.closePath()}drawBackground(){this.canvasContext.globalCompositeOperation="lighter";for(let t=0;t<this.bgDots.length;t++){const i=this.canvasContext.createRadialGradient(this.bgDots[t].x,this.bgDots[t].y,0,this.bgDots[t].x,this.bgDots[t].y,this.bgDots[t].rad);i.addColorStop(0,"hsla("+(this.conf.hue+this.bgDots[t].hue)+", 100%, 60%, 0.3)"),i.addColorStop(1,"hsla("+(this.conf.hue+this.bgDots[t].hue)+", 100%, 50%, 0)"),this.canvasContext.beginPath(),this.canvasContext.arc(this.bgDots[t].x,this.bgDots[t].y,this.bgDots[t].rad,0,2*Math.PI),this.canvasContext.fillStyle=i,this.canvasContext.fill(),this.canvasContext.closePath()}}clear(){this.canvasContext.globalCompositeOperation="source-over",this.canvasContext.beginPath(),this.canvasContext.fillStyle="#000",this.canvasContext.fillRect(0,0,this.w,this.h),this.canvasContext.closePath()}onProgress(t){this.clear(),this.drawBackground(),this.drawLines(this.getFraction(t))}}var c={incidents:[{exportable:d,name:"LineEffect"}]};const g=t.loadPlugin(c);class b extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return`\n      <div class="wrapper">\n        <canvas id="lines" width="${this.attrs.width}px" height="${this.attrs.height}px"></canvas> \n        dawd\n  \t  </div>\n    `}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        overflow: hidden;\n        background-color:${this.attrs.backgroundColor}\n      }\n     \n      \n    `}buildTree(){const t=new g.LineEffect({hue:this.attrs.hue,width:this.attrs.lineWidth,length:this.attrs.lineLength,lineNumber:this.attrs.lineNumber,opacity:this.attrs.opacity},{duration:2e3,selector:"#lines"});this.addIncident(t,0)}}class u extends t.HTMLClip{get font(){return[{type:"google-font",src:"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,500;0,800;1,700;1,800;1,900&display=swap"}]}get html(){return"\n      <div class=\"wrapper\">\n        <div class='circle xxlarge shade1'></div>\n        <div class='circle xlarge shade2'></div>\n        <div class='circle large shade3'></div>\n        <div class='circle mediun shade4'></div>\n        <div class='circle small shade5'></div>\n  \t  </div>\n    "}get css(){return`\n      .wrapper{\n        width: ${this.attrs.width}px;\n        height: ${this.attrs.height}px;\n        background-color: ${this.attrs.backgroundColor}\n      }\n      .circle{\n        position: absolute;\n        border-radius: 50%;\n        background: ${this.attrs.circleColor};\n        animation: ripple 15s infinite;\n        box-shadow: 0px 0px 1px 0px #000;\n      }\n      \n      .small{\n        width: ${.2*this.attrs.circleSize}px;\n        height: ${.2*this.attrs.circleSize}px;\n        left: -${.2*this.attrs.circleSize/2}px;\n        bottom: -${.2*this.attrs.circleSize/2}px;\n        opacity: 0.9;\n      }\n      \n      .medium{\n        width: ${.4*this.attrs.circleSize}px;\n        height: ${.4*this.attrs.circleSize}px;\n        left: -${.4*this.attrs.circleSize/2}px;\n        bottom: -${.4*this.attrs.circleSize/2}px;\n        opacity: 0.8;\n      }\n      \n      .large{\n        width: ${.6*this.attrs.circleSize}px;\n        height: ${.6*this.attrs.circleSize}px;\n        left: -${.6*this.attrs.circleSize/2}px;\n        bottom: -${.6*this.attrs.circleSize/2}px;\n        opacity: 0.7;\n      }\n      \n      .xlarge{\n        width: ${.8*this.attrs.circleSize}px;\n        height: ${.8*this.attrs.circleSize}px;\n        left: -${.8*this.attrs.circleSize/2}px;\n        bottom: -${.8*this.attrs.circleSize/2}px;\n        opacity:0.5\n      }\n      \n      .xxlarge{\n        width: ${this.attrs.circleSize}px;\n        height: ${this.attrs.circleSize}px;\n        left: -${this.attrs.circleSize/2}px;\n        bottom: -${this.attrs.circleSize/2}px;\n        opacity:0.2;\n      }\n      \n    `}buildTree(){const i=new t.Combo({incidents:[{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{transform:{scale:.8}}},props:{duration:5e3},position:0},{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{transform:{scale:1.2}}},props:{duration:5e3},position:5e3},{incidentClass:t.CSSEffect,attrs:{animatedAttrs:{transform:{scale:.8}}},props:{duration:5e3},position:1e4}]},{selector:".circle"});this.addIncident(i,0)}}return{npm_name:"@donkeyclip/motorcortex-backgrounds",version:"0.2.0",incidents:[{exportable:i,name:"BgOpener",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},bgUrl:{optional:!1,type:"string"},easing:{optional:!1,type:"string"},exitStart:{optional:!1,type:"number"}}},{exportable:n,name:"TwoSidesReveal",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},bgUrl:{optional:!1,type:"string"},easing:{optional:!1,type:"string"}}},{exportable:s,name:"ColumnReveal",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},bgUrl:{optional:!1,type:"string"},easing:{optional:!1,type:"string"},exitStart:{optional:!1,type:"number"},bgOut:{optional:!1,type:"boolean"}}},{exportable:e,name:"RowReveal",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},bgUrl:{optional:!1,type:"string"},easing:{optional:!1,type:"string"},exitStart:{optional:!1,type:"number"},bgOut:{optional:!1,type:"boolean"}}},{exportable:r,name:"ThreeSidesReveal",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},bgUrl:{optional:!1,type:"string"},overlayColor:{optional:!1,type:"color"},grid:{optional:!1,type:"boolean"},gridDuration:{optional:!0,type:"number"},gridColor:{optional:!1,type:"color"},columns:{optional:!1,type:"number"},rows:{optional:!1,type:"number"}}},{exportable:a,name:"Grid",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},color:{optional:!1,type:"color"},columns:{optional:!1,type:"number"},rows:{optional:!1,type:"number"}}},{exportable:o,name:"HexagonCircle",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},colors:{optional:!1,type:"array",items:{type:"color"}},size:{optional:!1,type:"number"}}},{exportable:p,name:"FloatingBubbles",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},color:{optional:!1,type:"color"},backgroundColor:{optional:!1,type:"color"},size:{optional:!1,type:"number"},bubbleCount:{optional:!1,type:"number"},maxBubbleRadius:{optional:!1,type:"number"}}},{exportable:h,name:"Wave",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},colors:{optional:!1,type:"array",items:{type:"color"}},backgroundColor:{optional:!1,type:"color"}}},{exportable:b,name:"GradientLines",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},hue:{optional:!0,type:"number"},lineWidth:{optional:!0,type:"number"},lineLength:{optional:!0,type:"number"},lineNumber:{optional:!0,type:"number"},opacity:{optional:!0,type:"number"}}},{exportable:u,name:"Ripples",attributesValidationRules:{width:{optional:!1,type:"number"},height:{optional:!1,type:"number"},circleSize:{optional:!0,type:"number"},backgroundColor:{optional:!1,type:"color"},circleColor:{optional:!1,type:"color"}}}]}}));
